// 堆数据结构，是树中的一种。我们最常用的是二叉堆。

二叉堆分两种类型：最大堆和最小堆

// 最大堆：堆顶元素是整个堆中的最大值。任何父节点的键值都大于任何一个子节点。
// 最小堆：堆顶元素是整个堆中的最小值。任何父节点的键值都小于任何一个子节点。

// 以最小堆为例：
//   插入节点时，只能插入二叉堆的最后一个位置。比较节点时，如果插入节点比父节点大，则需要上浮，持续比较，直到比父节点小为止
//   删除节点时，我们通常只会删除堆顶的元素。删除后结构出现了混乱，需要将最后一个节点补充到堆顶。补充后树结构不符合最小堆的特性，因此需要与子元素进行比较，找到最小的子元素与其交换位置，这个行为称之为下沉。持续比较，知道符合最小堆的规则

延伸：
  数组的sort方法，也是采用类似堆的排序逻辑
  function sort(a, b) {
    // 最小堆（升序）
    return a < b
  }

  function sort(a, b) {
    // 最大堆（降序）
    return a > b
  }